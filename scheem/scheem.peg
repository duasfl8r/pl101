start =
    expression

expression =
    space* atom:atom space*
        { return atom; }
  / space* "(" space* atom:atom args:arg* space* ")" space*
        { return [atom].concat(args); }
  / space* "'(" space* atom:atom args:arg* space* ")" space*
        { return ["quote", [atom].concat(args)]; }

arg =
    space* e:expression
        { return e; }

space =
    " "
  / "\t"
  / "\n"

validchar =
    [0-9a-zA-Z_?!+-=@#$%^&*/.]

atom =
    chars:validchar+
        { return chars.join(""); }
